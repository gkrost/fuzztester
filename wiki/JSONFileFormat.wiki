#summary Detailed File Format for test cases in the JSON format

= JSON Object format =

Fuzz Testers test cases are codified in the Javascript Object Notation (JSON) format see [http://json.org/ JSON.org] for details concerning escaping special characters, types, etc. 

== Simple Types ==
 * int, long, short, byte -> java.lang.Integer (if possible)
 * float, double -> java.lang.Double

== Test Format ==
Unit tests
{{{
{
    "unitTest" : [
        {
            "ignore" : true,  # optional default false
            "comment" : "Getting Started Trunc Test (input, length, expected)",  # optional
            "method" : "truncExample",  # required the method name to test
            "testCases" : [  # required, list of test cases to run
                { "args" : [ "", 6, "" ] },
                { "args" : [ "1", 6, "1" ] },
                { "args" : [ "12", 6, "12" ] },
                { "args" : [ "123456", 6, "123456" ] },
                { "args" : [ "123456789", 6, "123456" ] },
                { "args" : [ "123456789", -1, "123456789" ] },
                { "args" : [ "123456789", 0, "" ] },
                { "args" : [ null, 1, null ] }

            ]
        },
        {
            "comment" : "Getting Started except(input, expected)",
            "method" : "exceptionExample",
            "testCases" : [
                {
                    "args" : [ "1", null ],
                    "exceptionThrown" : "java.lang.Exception"
                },
                {
                    "args" : [ "1", null ],
                    "exceptionThrown" : "java.lang.Exception",
                    "exceptionMessage" : "This is a test exception: 1"
                },
                {
                    "args" : [ "1", null ],
                    "exceptionMessage" : "This is a test exception: 1"
                },
                {
                    "args" : [ null, null ]
                }
            ]
        }
    ]
}
}}}