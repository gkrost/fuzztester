#summary Getting Started

= Dependencies =

FuzzTester is a [http://junit.org/ jUnit] add on, it integrates with all jUnit test runners.

== Required Jars ==
 * [http://github.com/KentBeck/junit/downloads JUnit 4] tested with 4.8.1
 * [http://code.google.com/p/google-gson/ GSON 1.4]
 * [http://commons.apache.org/beanutils/ commons-beanutils 1.7.0]
 * [http://commons.apache.org/collections/ commons-collections 3.2.1]
 * [http://commons.apache.org/lang/ commons-lang 2.4]
 * [http://commons.apache.org/logging/ commons-logging 1.0.4]

Note that included in the release is a fuzz-tester-dependencies-version.jar that rolls up the Apache Commons and GSON libraries.

== Simple Test Case ==

 # Annotate your class with the fuzztester-runner and the test parameters which is a file or files with your test data
{{{
1 @RunWith( FuzzTester.class )
2 @Parameters( TestDirectory = "test/com/agwego/fuzz/examples", Prefix = "GettingStarted" )
3 public class GettingStartedTest {
}}}
  # uses the JUnit @RunWith annotation to say use the fuzztester runner
  # provides the test file(s) location and name(s)
  <br/>
 # Mark your test fixtures with the @Fuzz annotation
{{{
@Fuzz
public void truncExample( final String input, final Integer endIndex, final String expected )
{
    assertEquals( expected, GettingStarted.trunc( input, endIndex ));
}
}}}
  The important thing to note here is that unlike JUnit tests which don't take any arguments, fuzz tester test fixtures can take arguments, how many and what types are up to you and are largely dictated by the methods you're testing.