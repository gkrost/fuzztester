<?xml version="1.0"?>

<!--
  ~ Copyright (c) 2010. Agwego Enterprises Inc.
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in
  ~ all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  ~ THE SOFTWARE.
  ~
  ~ If you modify this software a credit would be nice
  -->

<project name="fuzztester_examples" basedir="." default="usage">
    <property environment="env"/>
	<!--property file="${basedir}/opt/personal/${env.USER}/build.${env.HOSTNAME}.properties"/>
	<property file="build.properties"/-->

	<property name="name" value="fuzztester_examples"/>

    <property name="src.dir" value="src"/>
    <property name="build.dir" value="build"/>
	<property name="test.dir" value="test"/>

    <property name="out.prod.dir" value="${build.dir}/prod"/>
    <property name="out.test.dir" value="${build.dir}/test"/>

    <mkdir dir="${build.dir}"/>

    <path id="classpath-libs">
        <fileset dir="${basedir}/lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="classpath-prod">
        <pathelement path="${out.prod.dir}"/>
    </path>

    <path id="classpath-test">
        <pathelement path="${out.test.dir}"/>         
    </path>

    <target name="usage" >
        <echo message=""/>
        <echo message="${name} build file"/>
        <echo message="------------------------------------"/>
        <echo message=""/>
        <echo message="Available targets are:"/>
        <echo message=""/>

        <echo message="build                 --> Build the production application"/>
        <echo message="tests                 --> run batch tests"/>
        <echo message="all-tests              --> run all tests (consolidated)"/>

        <echo message="clean                 --> cleanup"/>
        <echo message="spotless              --> revert to pristine"/>

        <echo message=""/>

	    <echo message="HOSTNAME: ${env.HOSTNAME}"/>
	    <echo message="USER: ${env.USER}"/>
	    <echo message="basedir: ${basedir}"/>
    </target>

    <target name="build" description="Compile main source tree java files">
        <mkdir dir="${out.prod.dir}"/>
        <javac destdir="${out.prod.dir}" source="1.5" target="1.5" debug="true" deprecation="false" optimize="false" failonerror="true">
            <src path="${src.dir}"/>
            <classpath refid="classpath-prod"/>
            <classpath refid="classpath-libs"/>

            <!--compilerarg  value="-Xlint"/-->
        </javac>
        <copy file="${src.dir}/log4j.properties" tofile="${out.prod.dir}/log4j.properties" overwrite="true"/>
    </target>

    <target name="buildtests" depends="build" description="Compile test tree java files">
        <mkdir dir="${out.test.dir}"/>
        <javac destdir="${out.test.dir}" source="1.5" target="1.5" debug="true" deprecation="false" optimize="false" failonerror="false">
            <src path="${test.dir}"/>
            <classpath refid="classpath-test"/>
            <classpath refid="classpath-prod"/>
            <classpath refid="classpath-libs"/>
        </javac>
    </target>

    <target name="tests" depends="buildtests" description="Run tests">
        <fileset dir="${out.test.dir}" id="test.classes">
            <include name="**/*Test.class" />
        </fileset>
        <property name="test.classes.prop" refid="test.classes"/>

        <echo message="${test.classes.prop}"/>

        <junit printsummary="on" fork="true" haltonfailure="true" failureproperty="tests.failed" showoutput="true" >
            <classpath refid="classpath-prod"/>
            <classpath refid="classpath-test"/>
            <classpath refid="classpath-libs"/>

            <formatter type="plain" usefile="false" /><!--if="junit.formatter.use"-->

            <batchtest>
                <formatter type="plain" usefile="false" /><!--if="junit.formatter.use"-->
                <fileset refid="test.classes"/>
            </batchtest>
        </junit>

        <fail if="tests.failed">
            tests.failed=${tests.failed}
            ***********************************************************
            ****  One or more tests failed!  Check the output ...  ****
            ***********************************************************
        </fail>
    </target>

    <target name="all-tests" depends="buildtests" description="Run All Tests">
        <junit printsummary="on" fork="true" haltonfailure="false" failureproperty="tests.failed" showoutput="true">
            <classpath refid="classpath-prod"/>
            <classpath refid="classpath-test"/>
            <classpath refid="classpath-libs"/>

            <formatter type="plain" usefile="false" if="junit.formatter.use"/>
            <test name="com.agwego.AllTests" />
        </junit>

        <fail if="tests.failed">
            tests.failed=${tests.failed}
            ***********************************************************
            ****  One or more tests failed!  Check the output ...  ****
            ***********************************************************
        </fail>        
    </target>

    <target name="clean" description="Clean output directories">
        <delete quiet="false" failonerror="false">
            <fileset dir="${build.dir}">
                <include name="**/*.class"/>
            </fileset>
        </delete>
    </target>

	<target name="spotless" depends="clean" description="Clean and revert to pristine">
	    <delete quiet="false">
	        <fileset dir="${basedir}">
	            <include name="**/svn-commit.tmp*"/>
                <!--include name="fuzz-tester-*.jar"/-->
	        </fileset>
	    </delete>
        <delete dir="${build.dir}"/>
	</target>
</project>
