{
    "Id" : "$Id: $",
    "unitTest" : [
        {
            "comment" : "Getting Started Trunc Test (input, length, expected)",
            "method" : "truncExample",
            "testCases" : [
                { "args" : [ "", 6, "" ] },
                { "args" : [ "1", 6, "1" ] },
                { "args" : [ "12", 6, "12" ] },
                { "args" : [ "123456", 6, "123456" ] },
                { "args" : [ "123456789", 6, "123456" ] },
                { "args" : [ "123456789", -1, "123456789" ] },
                { "args" : [ "123456789", 0, "" ] },
                { "args" : [ null, 1, null ] }

            ]
        },
        {
            "comment" : "Getting Started except(input, expected)",
            "method" : "exceptionExample",
            "testCases" : [
                {
                    "args" : [ "1", null ],
                    "exceptionThrown" : "java.lang.Exception"
                },
                {
                    "args" : [ "1", null ],
                    "exceptionThrown" : "java.lang.Exception",
                    "exceptionMessage" : "This is a test exception: 1"
                },
                {
                    "args" : [ "2", null ],
                    "exceptionMessage" : "This is a test exception"
                },
                {
                    "args" : [ null, null ]
                }
            ]
        },
        {
            "comment" : "Getting Started, example with simple objects",
            "method" : "simpleObject",
            "testCases" : [
                {
                    "args" : [
                        {
                            "strObj" : "strExample",
                            "intObj" : 15,
                            "boolObj" : true
                        },
                        2,
                        30,
                        false                      
                    ],
                    "comment" : " simple object, x value, expected num, expected boolean"
                }
            ]
        },
        {
            "comment" : "Getting Started, example with simple objects",
            "method" : "simpleObjectConstructor",
            "testCases" : [
                {
                    "args" : [
                        {
                            "strObj" : "strExample",
                            "intObj" : 15,
                            "boolObj" : true
                        },
                        2,
                        30,
                        true
                    ],
                    "comment" : " simple object, x value, expected num, expected boolean"
                }
            ]
        },
        {
            "comment" : "Getting Started, example with mested objects",
            "method" : "parentChild",
            "testCases" : [
                {
                    "args" : [
                        {
                            "value" : 2.5,
                            "child" : {
                                "strObj" : "The child",
                                "valueObj" : 1.2
                            }
                        },
                        2,
                        6.2
                    ],
                    "comment" : "nested object, x value, expected value"
                }
            ]
        }

    ]
}